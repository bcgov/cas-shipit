apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cas-shipit.fullname" . }}-web
  labels:
{{ include "cas-shipit.labels" . | indent 4 }}
    app.kubernetes.io/component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "cas-shipit.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
      {{ include "cas-shipit.labels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      restartPolicy: Always
      initContainers:
        - name: {{ include "cas-shipit.fullname" . }}-migrate
          env: {{ include "cas-shipit.envVariables" . | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["bin/rails", "db:migrate"]
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
        - name: {{ include "cas-shipit.fullname" . }}-teams-fetch
          env: {{ include "cas-shipit.envVariables" . | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["bin/rake", "teams:fetch"]
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
      containers:
        - name: {{ include "cas-shipit.fullname" . }}-web
          env: {{ include "cas-shipit.envVariables" . | nindent 12 }}
            - name: WEB_CONCURRENCY
              value: "{{ .Values.shipit.web.puma_workers }}"
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status/version
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status/version
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 600
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
      restartPolicy: Always
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 30
