apiVersion: template.openshift.io/v1
kind: Template

parameters:
  - description: Prefix to prepend to object name.
    displayName: Prefix
    name: PREFIX
    required: true
  - description: SHA1 of git revision to be deployed.
    displayName: Git SHA1
    name: GIT_SHA1
    required: true
  - description: Openshift project name
    displayName: Project
    name: OC_PROJECT
    required: true
  - description: Openshift registry URL
    displayName: Registry
    name: OC_REGISTRY
    required: true
  - description: Postgres Database Password
    displayName: Postgres Database Password
    name: POSTGRES_PASSWORD


envDefaults: &envDefaults
  env:
    - name: RAILS_ENV
      value: production
    - name: DATABASE_URL
      value: postgres://shipit:${POSTGRES_PASSWORD}@cas-shipit-postgres-master:5432/shipit
    - name: RAILS_MASTER_KEY
      valueFrom:
        secretKeyRef:
          key: RAILS_MASTER_KEY
          name: ${PREFIX}shipit-worker
    - name: RAILS_SERVE_STATIC_FILES
      value: "true"

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${PREFIX}shipit-worker
    spec:
      replicas: 1
      selector:
        name: ${PREFIX}shipit-worker
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: ${PREFIX}shipit-worker
        spec:
          restartPolicy: Always
          containers:
            - name: ${PREFIX}shipit-worker
              image: ${OC_REGISTRY}/${OC_PROJECT}/${PREFIX}shipit:${GIT_SHA1}
              command:
                - /usr/bin/env
              args:
                - bash
                - "-c"
                - bundle exec sidekiq -C config/sidekiq.yml
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /usr/bin/env
                    args:
                      - bash
                      - "-c"
                      - bundle exec sidekiqctl quiet
              <<: *envDefaults
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: "1"
                  memory: 512Mi
                requests:
                  cpu: 500m
                  memory: 256Mi
              ports:
                - containerPort: 7433
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 7433
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 7433
                  scheme: HTTP
                initialDelaySeconds: 600
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 30
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: cas-shipit
          serviceAccountName: cas-shipit
          terminationGracePeriodSeconds: 30
