apiVersion: template.openshift.io/v1
kind: Template

parameters:
  - description: Prefix to prepend to object name.
    displayName: Prefix
    name: PREFIX
    required: true
  - description: SHA1 of git revision to be deployed.
    displayName: Git SHA1
    name: GIT_SHA1
    required: true
  - description: Openshift project name
    displayName: Project
    name: OC_PROJECT
    required: true
  - description: Openshift registry URL
    displayName: Registry
    name: OC_REGISTRY
    required: true
  - description: Postgres Database Password
    displayName: Postgres Database Password
    name: POSTGRES_PASSWORD


envDefaults: &envDefaults
  env:
    - name: RAILS_ENV
      value: production
    - name: DATABASE_URL
      value: postgres://shipit:${POSTGRES_PASSWORD}@cas-shipit-postgres-master:5432/shipit
    - name: RAILS_MASTER_KEY
      valueFrom:
        secretKeyRef:
          key: RAILS_MASTER_KEY
          name: ${PREFIX}shipit
    - name: RAILS_SERVE_STATIC_FILES
      value: "true"

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${PREFIX}shipit
    spec:
      replicas: 1
      selector:
        name: ${PREFIX}shipit
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: ${PREFIX}shipit
        spec:
          restartPolicy: Always
          containers:
            - image: ${OC_REGISTRY}/${OC_PROJECT}/${PREFIX}shipit:${GIT_SHA1}
              <<: *envDefaults
              imagePullPolicy: IfNotPresent
              name: ${PREFIX}shipit-web
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits:
                  cpu: "1"
                  memory: 1Gi
                requests:
                  cpu: 500m
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            - args:
                - bash
                - "-c"
                - bundle exec sidekiq -C config/sidekiq.yml
              command:
                - /usr/bin/env
              image: ${OC_REGISTRY}/${OC_PROJECT}/${PREFIX}shipit:${GIT_SHA1}
              <<: *envDefaults
              imagePullPolicy: IfNotPresent
              name: ${PREFIX}shipit-worker
              resources:
                limits:
                  cpu: "1"
                  memory: 512Mi
                requests:
                  cpu: 500m
                  memory: 256Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: cas-shipit
          serviceAccountName: cas-shipit
          terminationGracePeriodSeconds: 30
